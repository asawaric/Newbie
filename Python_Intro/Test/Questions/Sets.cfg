[SetOperations]
statement:  Assume x = set(['a', 'b']) and y = set(['a', 'd', 'e'])
            What is the output of the following?
            >>>print [x.union(y), x-y, y-x]
1:[set(['a', 'b', 'e', 'd']), set(['b']), set(['e', 'd'])]~~True
2:[['a', 'b', 'e', 'd'], ['b'], ['e', 'd']]~~False
3:[set(['a', 'b', 'e', 'd']), set(['e','d']), set(['e', 'd'])]~~False
4:{b} and {d,e}~~False
5:['b'],['d','e']~~False

[RemovingDuplicates]
statement:  Which of the following Python code can remove duplicates from the list?
            lst = [1,2,1,2,3,4,2,1,1]
1:lst.remove(1) and lst.remove(2)~~False
2:del(lst[1]) and del(lst[2])~~False
3:lst.remove(1,2)~~False
4:set[lst]~~False
5:set(lst)~~True

[RemovingSetItem]
statement:  Let y = set(['a', 'd', 'e'])
            How do you remove 'a' from y?
1:y.remove('a')~~True
2:y.discard('a')~~True
3:del('a')~~False
4:y = y[1:]~~True
5:del(y[0])~~False

[SetOperations2]
statement: Assume x = set(['a', 'b', 'c']) and y = set(['a', 'f', 'c'])
           What is the output of the following?
           >>>x^y
1:{'b'}~~False
2:['b', 'f']~~False
3:{'b', 'f'}~~True
4:{'a', 'b', 'c', 'f'}~~False
5:['a', 'b', 'c', 'f']~~False
